name: 'CI'
on: ["push"]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
#    env:
#      RUSTC_WRAPPER: sccache
#      SCCACHE_DIR: /home/runner/.cargo/sccache
#      SCCACHE_CACHE_SIZE: 300M
#      SCCACHE_IDLE_TIMEOUT: 0
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      # For sccache
#      - name: "Install sccache"
#        env:
#          LINK: https://github.com/mozilla/sccache/releases/download
#          SCCACHE_VERSION: 0.2.13
#        run: |
#          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
#          mkdir -p $HOME/.local/bin
#          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
#          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
#          echo "::add-path::$HOME/.local/bin"
      # Caching Cargo
      - name: "Run actions/cache@v1 for cargo registry"
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: "Run actions/cache@v1 for cargo index"
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: "Run actions/cache@v1 for cargo build"
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
#      - name: "Run actions/cache@v1 for sccache"
#        uses: actions/cache@v1
#        with:
#          path: ~/.cargo/sccache
#          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
#      - name: "Start sccache server"
#        run: |
#          sccache --start-server
      - name: "actions-rs/cargo@v1 for check"
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: "actions-rs/cargo@v1 for test"
        uses: actions-rs/cargo@v1
        with:
          command: test

  test-sccache:
    name: Test Using sccache
    runs-on: ubuntu-latest
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_DIR: /home/runner/.cargo/sccache
      SCCACHE_CACHE_SIZE: 300M
      SCCACHE_IDLE_TIMEOUT: 0
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: "Install sccache"
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.13
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "::add-path::$HOME/.local/bin"
    - name: "Run actions/cache@v1 for cargo registry"
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: "Run actions/cache@v1 for cargo index"
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: "Run actions/cache@v1 for cargo build"
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: "Run actions/cache@v1 for sccache"
      uses: actions/cache@v1
      with:
        path: ~/.cargo/sccache
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: "Start sccache server"
      run: |
        sccache --start-server
    - name: "actions-rs/cargo@v1 for check"
      uses: actions-rs/cargo@v1
      with:
        command: check
    - name: "actions-rs/cargo@v1 for test"
      uses: actions-rs/cargo@v1
      with:
        command: test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --verbose
      - name: run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings --verbose -A clippy::wrong-self-convention
